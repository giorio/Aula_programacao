Coisas para PHP ou feita com PHP

museum.php.net
midiwiki
zend framework (framework para php)

renderae.com.br (produtora de efeitos graficos para youtube12)

total variavel em php começa com $ e o nome dela é toda minuscula.

Exemplo de atribuição:

$idade = 3;
$sal = 1825.54;
$nome = "Leonardo";
$casado = false; (true)

Para o php não há declaração de variavel, mas pode ser forçado um tipo de atributo primitivo para as variveis usando os "typecast" descrito abaixo:

	Inteiro - (int), (integer)
	Real - (real), (float), (double)
	caractere - (string)
	lógico (boleano) - não há pq em php o tipo logico é considero um tipo inteiro, para true = 1; false = vazio

comando echo e print são similares e servem para sáida de dados do código para tela.6

Operadores Aritmétricos

Adição > $r = $a + $b
subtração > $r = $a - $b
multiplicação > $r = $a * $b
Divisão > $r = $a / $b
Módulo (resto da divisão) > $r = $a % $b

Funções aritmetica

abs() - Retorna o valor absoluto da variavel
pow() - potenciação
sqrt() - Raiz quadrada
round() - arredondamento
ceil() - arrendonda para cima então 3.1 virá 4
floor() - arrendonda para baixo então 3.9 virá 3
intval() - pega a parte inteirta dq variavel
number_format() - Formatação


operadores de atribuição

algoritmo

a <- 1
b <- 3
c <- a + b
c <- c + 5
a <- a + 1

php

$a = 1;
$b = 3;
$c = $a + $b;
$c = $c + 5; ou $c += 5;
$a = $a + 1; ou $a ++;

Adição > $a = $a + $b ou $a += $b
Subtração > $a = $a - $b ou $a -= $b
Multiplicação > $a = $a * $b ou $a *= $b
Divisão > $a = $a / $b ou $a /= $b
módulo > $a = $a % $b ou $a %= $b
concatenação > $a = $a . $b ou $a .= $b

operadores de incremento

Pré-incremento > $a = $a + 1 ou ++$a
Pós-incremento > $a = $a + 1 ou $a++
Pré-decremento > $a = $a - 1 ou --$a
Pós-decremento > $a = $a - 1 ou $a--

Pré > incrementa antes de usar a variável
Pós > incrementa depois de usar a variável

como fazer comentário em php
comentários inline
// ou #

Comentários multiline

/* comentario */

Como fazer referências entre variáveis

$a = 3;
$b = $a;
$b += 5;
echo $a; // 3
echo $b; // 8

$a = 3;
$b = &$a; // você está ligando as $a e $b
$b += 5;
echo $a; // 8
echo $b; // 8

Variáveis de variáveis ou variáveis variantes

Comparações

operadores relacionais
Maior - $a > $b
Menor - $a < $b
Maior ou igual - $a >= $b
Menor ou igual - $a <= $b
diferente - $a <> $b ou $a != $b
igual - $a == $b
idêntico - $a === $b -> igual e do mesmo tipo

Operador Ternário

expressão ? valor se verdadeiro : valor se falso

operadores lógico

e -> and ou &&
ou -> or ou ||
Xou ou Ou exclusivo - as situções não podem se repetir então na tabela verdade (p XOU q) o resultado ficaria -> xor

p 		|Q 			|p XOU q
v 		|v 			|f
v 		|f 			|v
f 		|v 			|v
f 		|f 			|f

não -> !

estrutura condicional

se

if (condição)
{se verdadeiro;}
else
{se falso;}

Condições de múltiplos casos (escolha) - switch

No visualg

escolha (op)
	caso 1
		escreva("A")
	caso 2
		escreva("B")
	outrocaso
		escreva("Erro")
	FimEscolha

em php

switch($op) {
	case 1:
		echo "A";
		break;
	case 2:
		echo "B";
		break;
	default:
		echo "Erro";
}

o comando break obrigatóriamente tem que está em caso, exceto no último.


No visualg

escolha (op)
	caso 1, 2, 3
		escreva("Tipo 1")
	caso 4, 5
		escreva("Tipo 12")
	outrocaso
		escreva("Tipo 3")
	FimEscolha

em php

switch($op) {
	case 1:
	case 2:
	case 3:
		echo "Tipo 1";
		break;
	case 4:
	case 5:
		echo "Tipo 2";
		break;
	default:
		echo "Tipo 3";
}

Repetição com teste logíco no início

Visualg

C <- 1
enquanto (c <= 10) faca
	escreva (c)
	C <- c + 1
FimEnquanto

PHP

$c = 1
while ($c <= 10) {
	echo $c;
	$c++;
}
pode usar 2 comandos
Break e continue
Break - encerra o while naquele ponto
Continui - volta para inicio do laço mesmo sem chegar no final
não recometando.

Repetições com teste Lógicos no Final

Visualg

C <- 1
Repita
	Escreva(c)
	c <- c + 1
Ate (c > 10)

em php não tem a estrutura repita más tem como fazer teste lógico no final, para isso precisa alterar a estrutura do algoritmo "Enquanto (while)"

Visualg

C <- 1
faca
	escreva (c)
	C <- c + 1
enquanto (c <= 10)

PHP

$c = 1
do {
	echo $c;
	$c++
} while ($c <= 10);

Repetição com Variavel de Controle

Visualg

Para c <- 1 até 10 faca
	Escreva(c)
FimPara

PHP

for($c = 1; $c <= 10; $c++){
	echo $c;
}

Rotinas

1) Pocedimento

	Visulag

		Procedimento Soma (A, B: Inteiro)
			var S: Inteiro
			S <- A + B
			Escreva(s)
		FimProcedimento

		Para chamar o procedimento

		Soma(3,4)

	PHP

		function soma ($a, $b) {
			$s = $a + $b;
			echo $s;
		}

		Para chamar o procedimento

		soma(3,4);

2) Funções
	
	Visulag

		Funcao Soma (A, B: Inteiro):Inteiro
			var S: Inteiro
			S <- A + B
			Retorne(S)
		FimFuncao

		Para chamar o procedimento

		Res <- Soma(3,4)

	PHP

		function soma ($a, $b) {
			$s = $a + $b;
			return $s;
		}

		Para chamar o procedimento

		$res = soma(3,4);

Rotinas com múltiplos parâmetros em PHP ou Parâmetros Dinâmicos

	$res = soma (3,4,8,1,2)

	function soma () {
		$p = func_get_args();
		$tot = func_num_args();
		$s = 0
		for ($i = 0; $i < $tot; $i++){
			$s += $p[i]
		}
		return $s;
	}

	$res = soma(3,4,8,1,2);

	func_get_args() -> Pega todos os argumentos e cria um vetor com eles
		$p = ($p[0],$p[1],$p[2],$p[3],$p[4]);
	func_num_args(); -> Retorna o números de argumentos passados

Passagem por VALOR

Pocedimento

	Visulag

		Procedimento Soma (x: Inteiro)
			var S: Inteiro
			x <- x + 2
			Escreva(x)
		FimProcedimento

		Para chamar o procedimento

		a <- 3
		Teste (a)
		Escreva(a) vai sair um 3

	PHP

		function soma ($x) {
			$x += 2;
			echo $x;
		}

		Para chamar o procedimento

		$a = 3;
		teste($a);
		echo($a); vai sair um 3

Passagem por ReferÊncia

Procedimento

	Visulag

		Procedimento Soma (var x: Inteiro)
			var S: Inteiro
			x <- x + 2
			Escreva(x)
		FimProcedimento

		Para chamar o procedimento

		a <- 3
		Escreva(a) vai sair um 3
		Teste (a)
		Escreva(a) vai sair um 5

	PHP

		function soma (&$x) {
			$x += 2;
			echo $x;
		}

		Para chamar o procedimento

		$a = 3;
		echo($a); vai sair um 3
		teste($a);
		echo($a); vai sair um 5

Como utilizar rotinas externas

quando se tem mais de um script PHP que utilizem a mesma function, o ideal é fazer um terceiro script só com as funções e dentro dos script chamar esse arquivo com o comando include

include
require

Com include, caso o arquivo de função esteja indisponivel, ele vai tenta executar o resto do script principal, já com require ele para a execução do script principal por falta do arquivo requerido.

Carrega apenas uma vez o arquivo de funções, quando os de cima, carrega cada vez que os comandos foram chamados.
include_once
require_once

Função String

	1) printf - saída de dado já formatado.

		Exemplo de sintax
		$prod = "leite";
		$preco = "4.5";
		printf = ("O %s está custando R$ %.2f", $prod, $preco);

		- paramêtros para o printf (mais comuns):
			%d - valor decimal (positivo ou negativo),
			%u - valor decimal sem sinal (apenas positivo),
			%f - valor real,
			%s - string

	2) print_r - mostra detalhes de variavel, principalmente vetores (útil para teste), pode ser substituida pelas funções var_dumps($x) ou var_export($x).
		criar vetor (ver aula de vetor):
			$x[0] = 4;
			$x[1] = 3;
			$x[2] = 8;
			print_r($x);

	3) wordwrap - força um quebra de linha quando há um texto muito grande.
		$txt = "Este é um exemplo de string gigante que...";
		$res = wordwrap($txt,tamanho,"<br>\n"false); //false não quebra a palavra ao meio, true sim.

	4) strlen - calcula o tamanho da string.
		$txt = "Curso em Vídeo";
		$tamanho = strlen($txt);
		$echo($tamanho);

		Saída = 11
	 
	 5) trim - retira espaço em branco antes e depois de uma string (no exemplo são os 'x')
		$nome = "xxxJoséxdaxSilvaxxx";
		$echo(strlen($nome));
		Saída = 19
		$novo = trim($nome);
		echo($novo);
		Saída = JoséxdaxSilva
		$echo(strlen($novo));
		Saída = 13

	6) ltrim - só elimina os espaços no inicio da string, a esquerda,
		$nome = "xxxJoséxdaxSilvaxxx";
		$novo = ltrim($nome);
		echo($novo);
		Saída = JoséxdaxSilvaxxx
		$echo(strlen($novo));
		Saída = 16

	7) rtrim - só elimina os espaços no final da string, a direita,
		$nome = "xxxJoséxdaxSilvaxxx";
		$novo = rtrim($nome);
		echo($novo);
		Saída = xxxJoséxdaxSilva
		$echo(strlen($novo));
		Saída = 16

	8) str_word_count - contador de palavras dentro de uma string.
		$frase = "Eu vou estudar PHP";
		$cont = str_word_cont($frase,0);
		print($cont);
		saída = 4

	9) explode - gera um vetor a partir de cada palavra de uma frase
		$site = "Curso em Vídeo";
		$vetor = explode(" ",$site);
		print_r($vetor);
		Saída = Array([0]=>Curso [1]=>em [2]=>Vídeo)

	10) str_split - gera um vetor a partir de cada letra de uma palavra
		$nome = "Maria";
		$vetor = str_split($nome);
		print_r($vetor);

		saída = Array([0]=>M [1]=>a [2]=>r [3]=>i [4]=>a)

	11) implode - pega os elementos de um vetor e concatena em uma unica string
		$vetor[0] = "Curso";
		$vetor[1] = "em";
		$vetor[2] = "Vídeo";
		$texto = implode("#",$vetor); // pode usar a funçao join()
		print($texto);
		Saída = Curso#em#Vídeo

	12) chr - mostra o caractere que está no código de entrada.
		$letra = chr(67);
		Saída =  C

	13) ord - mostra o código de caractere
		$letra = "C"
		$cod = ord($letra);
		echo "O código da letra $letra é $cod."
		Saída = O código da letra C é 67.

	14) strtolower - coloca todas as letras da string em minuscula.
		$nome = "Gustavo Di Iório";
		print("Seu nome é ".strtolower($nome));
		Saída = Seu nome é gustavo di iório

	15) strtoupper - coloca todas as letras da string em maiscula.

		$nome = "Gustavo Di Iório";
		print("Seu nome é ".strtoupper($nome));
		Saída = Seu nome é GUSTAVO DI IÓRIO

	16) ucfirst - coloca a primeira em maiscula, mas não troca as demais.
		$nome = "gustavo di iório";
		print "Seu nome é ".ucfirst($nome);
		Saída = Seu nome é Gustavo di iório

	17) ucwords - coloca a primeira letra de cada palavra em maiscula, mas não altera as demais
		$nome = "gustavo di iório";
		print "Seu nome é ".ucwords($nome);
		Saída = Seu nome é Gustavo Di Iório

	18) strrev - coloca a string ao contrario
		$nome = "gustavo di iório";
		print "Seu nome é ".strrev($nome);
		Saída = Seu nome é oiroi id ovatsug

	19) strpos - retorna a posição de uma string, a substring tem ser igual a variavel, case sensitive
		$frase = "Estou aprendendo PHP";
		$pos = strpos($frase, "PHP");
		Saída = A string foi encontada na posição 17

	20) stripos - retorna a posição de uma string, a substring tem ser igual a variavel, ignora o case sensitive
		$frase = "Estou aprendendo PHP";
		$pos = stripos($frase, "php");
		Saída = A string foi encontada na posição 17.

	21) substr_count - conta a quantidade de vez uma substring aparece dentro de uma string.
		$frase = "Estou aprendendo PHP no Curso em Vídeo de PHP";
		$cont = substr_count($frase,"PHP");
		print("PHP foi encontrado $cont vezes");
		Saída = PHP foi encontrado 2 vezes

	22) substr - uma parte de uma string, os parametros são: (Variavel, posição inicial, quantidade de caractere)
		$site = "Curso em Vídeo";
		$sub = substr($site, 0, 5);
		echo "$sub";
		Saída = Curso

		Considerações:
		1 - se na posição colocar valor negativo ele vai pegar a últimas letras exemplo substr($site, -5, 2) = Vi; ele vai contar 5 espaço começando da última.
		2 - se colocar apenas a posição inicial, a função irá retornar o valor da string començando daquela posição até o final, exemplo substr($site, 6) = em Vídeo

	23) str_pad - faz uma string caber dentro de um tamanho, quando uma string é menor que o tamanho do campo, pode usar essa função aumentar o tamanho da string
		$nome = "Guanabara";
		$novo_right = str_pad($nome,30," ",STR_PAD_RIGHT);
		$novo_center = str_pad($nome,30," ",STR_PAD_BOTH);
		$novo_left = str_pad($nome,30," ",STR_PAD_LEFT);
		STR_PAD_RIGHT - colocar a string do terceiro paramentro no final, a direita,
		STR_PAD_BOTH - colocar a string do terceiro paramentro divido na direita e na esquerda,
		STR_PAD_LEFT - colocar a string do terceiro paramentro no inicio, a esquerda.
		print "Meu professor é o $novo_right, usando right";
		print "Meu professor é o $novo_center, usando both";
		print "Meu professor é o $novo_left, usando left";

	24) str_repeat - repete um string pelo número de vez definido.
		$txt = str_repeat("Php" 5);
		echo "O texto gerado foi $txt";
		Saída O texto gerado foi PhpPhpPhpPhpPhp

	25) str_replace - ele troca um substring por outra, troca o parametro 1 pelo 2, case sensitive
		$frase = "Gosto de estudar Matemática";
		$novafrase = str_replace("Matemática", "PHP", $frase);
		echo $novafrase;

	26) str_ireplace - ele troca um substring por outra, troca o parametro 1 pelo 2,
		$frase = "Gosto de estudar Matemática";
		$novafrase = str_ireplace("Matemática", "PHP", $frase);
		echo $novafrase;